{"version":3,"sources":["Components/Searchbar/Searchbar.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Loader/Loader.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/ErrorView/ErrorView.module.css","Components/PreView/PreView.module.css","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/ErrorView/ErrorView.js","Components/Loader/Loader.js","Components/PreView/PreView.js","services/apiService.js","Components/Modal/Modal.js","Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["module","exports","ImageGalleryItem","src","alt","onClick","id","className","s","ImageGalleryItemImage","Button","loadMore","type","ErrorView","message","PendingView","Loading","size","IconSpinner","RequestOffer","fetchImages","newQuery","page","fetch","then","response","ok","json","Promise","reject","Error","data","newImages","hits","map","image","webformatURL","largeImageURL","tags","total","totalHits","length","toast","error","modalRoot","document","querySelector","Modal","toClose","isShow","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","Overlay","target","currentTarget","Searchbar","onSubmit","useState","imageName","setImageName","SearchForm","preventDefault","toLowerCase","trim","warning","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","ImageGallery","images","setImages","setPage","setError","status","setStatus","loading","setLoading","showModal","setShowModal","modalUrl","setModalUrl","modalAlt","setModalAlt","setTotal","prev","imagesRest","info","catch","toSmoothScroll","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","handleSelectImage","targetIndex","findIndex","targetImage","nanoid","App","autoClose","position","theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.841d8a55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2qBTI\",\"SearchForm\":\"Searchbar_SearchForm__2SCSk\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2Vc59\",\"SearchFormInput\":\"Searchbar_SearchFormInput__31pgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2G8YX\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1eYwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"Loader_Loading__1iMDI\",\"IconSpinner\":\"Loader_IconSpinner__2t8OS\",\"spinner\":\"Loader_spinner__brfXn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2fef1\",\"Modal\":\"Modal_Modal__zgzxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__beXih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1r7Cv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorView\":\"ErrorView_ErrorView__2pl5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RequestOffer\":\"PreView_RequestOffer__18FDK\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ src, alt, onClick, id }) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        id={id}\r\n        src={src}\r\n        alt={alt}\r\n        onClick={onClick}\r\n        className={s.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nfunction Button({ loadMore }) {\r\n  return (\r\n    <button id=\"loadMore\" onClick={loadMore} type=\"button\" className={s.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  loadMore: PropTypes.func,\r\n};\r\n","import s from './ErrorView.module.css';\r\n\r\nexport default function ErrorView({ message }) {\r\n  return <p className={s.ErrorView}>{message}</p>;\r\n}\r\n","import s from './Loader.module.css';\r\nimport { ImSpinner3 } from 'react-icons/im';\r\n\r\nexport default function PendingView() {\r\n  return (\r\n    <p className={s.Loading}>\r\n      <ImSpinner3 size=\"100\" className={s.IconSpinner} />\r\n    </p>\r\n  );\r\n}\r\n","import s from './PreView.module.css';\r\n\r\nexport default function PendingView() {\r\n  return <p className={s.RequestOffer}>Enter your request...</p>;\r\n}\r\n","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst API_KEY = '24048830-4cc4486dcdd2cd17ebea2a9c8';\r\n\r\nfunction fetchImages(newQuery, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${newQuery}&page=${page}&&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  )\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(new Error(`No image with name ${newQuery}`));\r\n    })\r\n    .then(data => {\r\n      const newImages = data.hits.map(image => {\r\n        return {\r\n          id: image.id,\r\n          webformatURL: image.webformatURL,\r\n          largeImageURL: image.largeImageURL,\r\n          tags: image.tags,\r\n        };\r\n      });\r\n      let total = data.totalHits;\r\n      if (newImages.length === 0) {\r\n        return toast.error('No images matching your request!');\r\n      }\r\n      return { newImages, total };\r\n    });\r\n}\r\n\r\nexport default fetchImages;\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ toClose, src, alt, isShow }) {\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape' && isShow === true) toClose();\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [toClose, isShow]);\r\n\r\n  const handleCloseByBackdrop = e => {\r\n    if (e.target === e.currentTarget) {\r\n      toClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleCloseByBackdrop}>\r\n      <div className={s.Modal}>\r\n        <img src={src} alt={alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  toClose: PropTypes.func.isRequired,\r\n  src: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  isShow: PropTypes.bool.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [imageName, setImageName] = useState('');\r\n\r\n  const handleNameChange = e => {\r\n    setImageName(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (imageName.toLowerCase().trim() === '') {\r\n      return toast.warning('Enter your request please!');\r\n    }\r\n    onSubmit(imageName);\r\n    setImageName('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>\r\n            <AiOutlineSearch size={30} />\r\n          </span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={imageName}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button/Button';\r\nimport ErrorView from '../ErrorView/ErrorView';\r\nimport Loader from '../Loader/Loader';\r\nimport PreView from '../PreView/PreView';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { nanoid } from 'nanoid';\r\nimport fetchImages from '../../services/apiService';\r\nimport Modal from '../Modal/Modal';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\n\r\nexport default function ImageGallery() {\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState('idle');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalUrl, setModalUrl] = useState('');\r\n  const [modalAlt, setModalAlt] = useState('');\r\n  const [imageName, setImageName] = useState('');\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!imageName) {\r\n      return;\r\n    }\r\n\r\n    setStatus('pending');\r\n\r\n    fetchImages(imageName, page)\r\n      .then(data => {\r\n        if (!data.newImages) {\r\n          setStatus('idle');\r\n          return;\r\n        }\r\n\r\n        setImages(prev => [...prev, ...data.newImages]);\r\n        setStatus('resolved');\r\n        setLoading(false);\r\n        setTotal(data.total);\r\n\r\n        const imagesRest = data.total - images.length - data.newImages.length;\r\n        if (data.newImages.length && data.newImages.length >= imagesRest) {\r\n          return toast.info('No more images matching your request!');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus('rejected');\r\n      });\r\n  }, [imageName, page]);\r\n\r\n  const loadMore = () => {\r\n    setLoading(true);\r\n    setPage(prev => prev + 1);\r\n    toSmoothScroll();\r\n  };\r\n\r\n  const toSmoothScroll = () => {\r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.clientHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleSelectImage = e => {\r\n    const targetIndex = images.findIndex(image => image.id === +e.target.id);\r\n    const targetImage = images[targetIndex];\r\n    setModalUrl(targetImage.largeImageURL);\r\n    setModalAlt(targetImage.tags);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setModalUrl('');\r\n    setModalAlt('');\r\n  };\r\n\r\n  const handleFormSubmit = imageName => {\r\n    setImageName(imageName);\r\n    setPage(1);\r\n    setImages([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {status === 'idle' && <PreView />}\r\n      <ul className={s.ImageGallery}>\r\n        {images &&\r\n          images.map(image => (\r\n            <ImageGalleryItem\r\n              key={nanoid()}\r\n              id={image.id}\r\n              src={image.webformatURL}\r\n              alt={image.tags}\r\n              onClick={handleSelectImage}\r\n            />\r\n          ))}\r\n      </ul>\r\n      {status === 'pending' && <Loader />}\r\n      {status === 'rejected' && <ErrorView message={error.message} />}\r\n      {status === 'resolved' && (\r\n        <>\r\n          {showModal && (\r\n            <Modal\r\n              toClose={closeModal}\r\n              src={modalUrl}\r\n              alt={modalAlt}\r\n              isShow={showModal}\r\n            />\r\n          )}\r\n          {images.length > 0 && images.length < total && !loading && (\r\n            <Button loadMore={loadMore} />\r\n          )}\r\n          {loading && <Loader />}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ImageGallery />\n      <ToastContainer autoClose=\"3000\" position=\"top-left\" theme=\"colored\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}