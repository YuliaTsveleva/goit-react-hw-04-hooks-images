{"version":3,"sources":["Components/Searchbar/Searchbar.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Loader/Loader.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/ErrorView/ErrorView.module.css","Components/PreView/PreView.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/ErrorView/ErrorView.js","Components/Loader/Loader.js","Components/PreView/PreView.js","services/apiService.js","Components/Modal/Modal.js","Components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["module","exports","Searchbar","state","imageName","handleNameChange","e","setState","currentTarget","value","handleSubmit","preventDefault","toLowerCase","trim","toast","warning","props","onSubmit","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","size","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","onClick","id","ImageGalleryItemImage","Button","loadMore","ErrorView","message","PendingView","Loading","IconSpinner","RequestOffer","fetchImages","newQuery","page","fetch","then","response","ok","json","Promise","reject","Error","data","hits","modalRoot","document","querySelector","Modal","handleKeyDown","code","isShow","toClose","handleCloseByBackdrop","target","window","addEventListener","removeEventListener","createPortal","Overlay","onKeyDown","ImageGallery","images","error","status","loading","showModal","modalUrl","modalAlt","toSetPage","prevState","length","fetchGallery","toSmoothScroll","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","map","image","webformatURL","largeImageURL","tags","info","catch","openModal","handleSelectImage","targetIndex","findIndex","targetImage","closeModal","prevProps","nanoid","App","handleFormSubmit","autoClose","position","theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d5568d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2qBTI\",\"SearchForm\":\"Searchbar_SearchForm__2SCSk\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2Vc59\",\"SearchFormInput\":\"Searchbar_SearchFormInput__31pgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2G8YX\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1eYwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"Loader_Loading__1iMDI\",\"IconSpinner\":\"Loader_IconSpinner__2t8OS\",\"spinner\":\"Loader_spinner__brfXn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2fef1\",\"Modal\":\"Modal_Modal__zgzxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__beXih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1r7Cv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorView\":\"ErrorView_ErrorView__2pl5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RequestOffer\":\"PreView_RequestOffer__18FDK\"};","import React, { Component } from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ imageName: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.imageName.toLowerCase().trim() === '') {\r\n      return toast.warning('Enter your request please!');\r\n    }\r\n    this.props.onSubmit(this.state.imageName);\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>\r\n              <AiOutlineSearch size={30} />\r\n            </span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.imageName}\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ src, alt, onClick, id }) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        id={id}\r\n        src={src}\r\n        alt={alt}\r\n        onClick={onClick}\r\n        className={s.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nfunction Button({ loadMore }) {\r\n  return (\r\n    <button id=\"loadMore\" onClick={loadMore} type=\"button\" className={s.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  loadMore: PropTypes.func,\r\n};\r\n","import s from './ErrorView.module.css';\r\n\r\nexport default function ErrorView({ message }) {\r\n  return <p className={s.ErrorView}>{message}</p>;\r\n}\r\n","import s from './Loader.module.css';\r\nimport { ImSpinner3 } from 'react-icons/im';\r\n\r\nexport default function PendingView() {\r\n  return (\r\n    <p className={s.Loading}>\r\n      <ImSpinner3 size=\"100\" className={s.IconSpinner} />\r\n    </p>\r\n  );\r\n}\r\n","import s from './PreView.module.css';\r\n\r\nexport default function PendingView() {\r\n  return <p className={s.RequestOffer}>Enter your request...</p>;\r\n}\r\n","const API_KEY = '24048830-4cc4486dcdd2cd17ebea2a9c8';\r\n\r\nfunction fetchImages(newQuery, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${newQuery}&page=${page}&&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  )\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(new Error(`No image with name ${newQuery}`));\r\n    })\r\n    .then(data => data.hits);\r\n}\r\n\r\nexport default fetchImages;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape' && this.props.isShow === true) {\r\n      this.props.toClose();\r\n    }\r\n  };\r\n\r\n  handleCloseByBackdrop = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.toClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    return createPortal(\r\n      <div\r\n        className={s.Overlay}\r\n        onClick={this.handleCloseByBackdrop}\r\n        onKeyDown={this.handleKeyDown}\r\n      >\r\n        <div className={s.Modal}>\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button/Button';\r\nimport ErrorView from '../ErrorView/ErrorView';\r\nimport Loader from '../Loader/Loader';\r\nimport PreView from '../PreView/PreView';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { nanoid } from 'nanoid';\r\nimport fetchImages from '../../services/apiService';\r\nimport Modal from '../Modal/Modal';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    page: 1,\r\n    error: null,\r\n    status: 'idle',\r\n    loading: false,\r\n    showModal: false,\r\n    modalUrl: '',\r\n    modalAlt: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevProps.imageName;\r\n    const newQuery = this.props.imageName;\r\n    if (prevQuery !== newQuery) {\r\n      this.setState({\r\n        status: 'pending',\r\n        page: 1,\r\n        images: [],\r\n      });\r\n      this.fetchGallery(1);\r\n    }\r\n  }\r\n\r\n  toSetPage = () => {\r\n    this.setState(prevState => {\r\n      if (this.state.images.length > 1) {\r\n        return { page: prevState.page };\r\n      }\r\n    });\r\n  };\r\n\r\n  loadMore = () => {\r\n    this.setState({ loading: true });\r\n    this.toSetPage();\r\n    this.fetchGallery(this.state.page);\r\n    this.toSmoothScroll();\r\n  };\r\n\r\n  toSmoothScroll = () => {\r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.clientHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  fetchGallery = page => {\r\n    const newQuery = this.props.imageName;\r\n    // setTimeout(() => {\r\n    fetchImages(newQuery, page)\r\n      .then(data => {\r\n        const images = data.map(image => {\r\n          return {\r\n            id: image.id,\r\n            webformatURL: image.webformatURL,\r\n            largeImageURL: image.largeImageURL,\r\n            tags: image.tags,\r\n          };\r\n        });\r\n\r\n        this.setState(prevState => {\r\n          return {\r\n            images: [...prevState.images, ...images],\r\n            status: 'resolved',\r\n            page: prevState.page + 1,\r\n            loading: false,\r\n          };\r\n        });\r\n        if (this.state.images.length === 0) {\r\n          return toast.error('No images matching your request!');\r\n        }\r\n        if (this.state.images.length > 0 && images.length === 0) {\r\n          return toast.info('No more images matching your request!');\r\n        }\r\n      })\r\n      .catch(error => this.setState({ error, status: 'rejected' }));\r\n    // }, 1000);\r\n  };\r\n\r\n  openModal = () => {\r\n    this.setState({\r\n      showModal: true,\r\n    });\r\n  };\r\n\r\n  handleSelectImage = e => {\r\n    const targetIndex = this.state.images.findIndex(\r\n      image => image.id === +e.target.id,\r\n    );\r\n    const targetImage = this.state.images[targetIndex];\r\n    this.setState({\r\n      modalUrl: targetImage.largeImageURL,\r\n      modalAlt: targetImage.tags,\r\n    });\r\n    this.openModal();\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      showModal: false,\r\n      modalUrl: '',\r\n      modalAlt: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { images, error, status, loading, showModal, modalUrl, modalAlt } =\r\n      this.state;\r\n\r\n    if (status === 'idle') {\r\n      return <PreView />;\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <ErrorView message={error.message} />;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ul className={s.ImageGallery}>\r\n            {images &&\r\n              images.map(image => (\r\n                <ImageGalleryItem\r\n                  key={nanoid()}\r\n                  id={image.id}\r\n                  src={image.webformatURL}\r\n                  alt={image.tags}\r\n                  onClick={this.handleSelectImage}\r\n                />\r\n              ))}\r\n          </ul>\r\n          {showModal && (\r\n            <Modal\r\n              toClose={this.closeModal}\r\n              src={modalUrl}\r\n              alt={modalAlt}\r\n              isShow={showModal}\r\n            />\r\n          )}\r\n          {images.length > 0 && !loading && <Button loadMore={this.loadMore} />}\r\n          {loading && <Loader />}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery imageName={this.state.imageName} />\n        <ToastContainer autoClose=\"3000\" position=\"top-left\" theme=\"colored\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}